name: Release Drafter + PyPI + MkDocs

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    types: [closed]
  release:
    types: [published]

permissions:
  contents: write

jobs:
  draft_release:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Release Drafter
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_package_and_docs:
    # Only run if this is a "release" event with type "published"
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Configure Git credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install build dependencies
        run: |
          pip install build twine

      - name: Build the package
        run: |
          python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          TEST_PYPI_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
          TEST_PYPI_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        run: |
          TAG_NAME="${GITHUB_REF_NAME}"

          if [[ "$TAG_NAME" == *"-rc"* ]]; then
            echo "Publishing to Test PyPI..."
            twine upload --repository-url https://test.pypi.org/legacy/ dist/*
          else
            echo "Publishing to Production PyPI..."
            twine upload dist/*
          fi

      - name: Install MkDocs
        run: |
          pip install -e ".[dev]"

      - name: Deploy MkDocs
        run: |
          mkdocs gh-deploy --force
